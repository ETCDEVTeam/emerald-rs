syntax = "proto3";
package emerald.vault;
import "address.proto";
import "seed.proto";
import "common.proto";

// Wallet is a group of entries used together. An entry may be a private key for a single address,
// or a group of addresses specified by HDPath on a Seed
message Wallet {
    FileType file_type = 1;
    // UUID
    bytes id = 2;
    // User defined label
    string label = 3;

    // List of HDPath accounts that belongs to the wallet, used to automate finding new
    // addresses and avoiding collision between different wallets
    repeated Reserved hd_accounts = 4;
    // Actual entries in the wallet
    repeated WalletEntry entries = 5;
    // Sequence for entry ids in that wallet. Incremented each time a new entry added, and used
    // as the id that new entry. Using this sequence, if entry gets deleted its id is not going
    // to be reused
    uint32 entry_seq = 6;
}

// Reserved index on a HD path, an x from m/44'/x'
message Reserved {
    // reference to a source seed
    bytes seed_id = 1;
    // reserved HD Path account id
    uint32 account_id = 2;
}

// Entry details
message WalletEntry {
    // id to reference entry per wallet
    uint32 id = 1;
    // Associated blockchain; entry may have multiple different assets on a single blockchain
    uint32 blockchain_id = 2;
    // true if entry is disabled for receiving, i.e. only for sending
    bool receive_disabled = 3;
    // public address, for reference
    Address address = 5;
    // reference to PK
    oneof pk_type {
        SeedHD hd_path = 7;
        bytes pk_id = 8;
    }
}


