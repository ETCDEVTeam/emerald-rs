language: rust
cache: cargo
rust:
  - stable
  - beta
  - nightly
os:
  - linux
  - osx
env:
  - ARCH=i686
  - ARCH=x86_64
before_install:
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then sudo apt-get -qq update; fi
  - if [[ $TRAVIS_OS_NAME == "linux" && $ARCH == "i686" ]]; then sudo apt-get install -y gcc-multilib g++-multilib; fi
  - if [[ $TRAVIS_OS_NAME == "linux" && $ARCH == "x86_64" ]]; then sudo apt-get install -y gcc-multilib g++-multilib; fi
  - if [[ $TRAVIS_OS_NAME == "linux" && $ARCH == "i686" ]]; then export TARGET=i686-unknown-linux-gnu; fi
  - if [[ $TRAVIS_OS_NAME == "linux" && $ARCH == "x86_64" ]]; then export TARGET=x86_64-unknown-linux-gnu; fi
  - if [[ $TRAVIS_OS_NAME == "osx" && $ARCH == "i686" ]]; then export TARGET=i686-apple-darwin; fi
  - if [[ $TRAVIS_OS_NAME == "osx" && $ARCH == "x86_64" ]]; then export TARGET=x86_64-apple-darwin; fi
before_script:
  - export RUST_BACKTRACE=1
  - export PATH="$PATH":~/.cargo/bin
  - (rustup target add $TARGET || true)
  - (travis_wait cargo install rustfmt --force || true)
  - echo "\$ rustfmt --version"
  - cargo fmt -- --version
script:
  - cargo fmt -- --verbose --write-mode=diff
  - (test "$TRAVIS_RUST_VERSION" == nightly || cargo build --target=$TARGET --verbose --release)
  - (test "$TRAVIS_RUST_VERSION" != nightly || cargo build --target=$TARGET --verbose --features "dev")
  - cargo test --target=$TARGET --verbose
  - cargo doc --no-deps
matrix:
  allow_failures:
    - rust: nightly
notifications:
  email:
    on_success: never
